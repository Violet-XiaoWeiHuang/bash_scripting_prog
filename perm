#!/bin/bash

oldsettings=$(stty -g)
#stty -icanon min 1 time 0 -icrnl -echo
trap "tput cup $(tput lines) 0; stty $oldsettings; exit 0 " SIGINT

if [[ $# > 1 ]]
then
	echo "Usage: perm [ dir-name ]" >&2 
        exit 1
fi
            
if [ ! -d $1 ]
then
	echo "$1 is not a valid directory name" >&2
	exit 1
fi

if [[ $# = 0 ]]
then
	path=$PWD
else 
	cd $1
	path=$PWD
fi

#totalLevel=1
#while [ $PWD != "/" ]
#do
#	totalLevel=$(( $totalLevel + 1 ))
#	cd ..
#done

(( totalLevel=$(echo $PWD | tr '/' ' ' | wc -w ) +1 ))


currentLevel=$totalLevel
currentCol=24   # identify the initiatial cursor place is on the 24th column

displayPath(){
clear
 
echo "Owner   Group   Other   Filename"
echo "-----   -----   -----   --------"
echo ""
 
cd $path 2> /dev/null	# go to the specified directory 
count=1		# compare to the currentLevel to deplay the extra infor or nor
columns=`tput cols`

for dir in / $(pwd | tr '/' ' ')
do
	cd $dir 2> /dev/null             # get access to specified dir
	
	perFormat=$( ls -ld `pwd` | sed 's/  */ /g' | cut -d ' ' -f1 )
	perFormat=$( echo $perFormat | sed 's/^d//' | sed 's/\.$//' | sed -r 's/(.)(.)(.)(.)(.)(.)(.)(.)(.)/\1 \2 \3   \4 \5 \6   \7 \8 \9   /' )
	
	dir_short=$( echo $dir | cut -c1-$(( $columns-24 )) )
	printf "%s%s\n" "$perFormat" "$dir_short"		    

	if [ $count = $currentLevel ]
	then
		filePath=$PWD
	ls -ld | awk '{printf "  Links: %s  Owner: %s  Group: %s  Size: %s  Modified: %s %s %s\n", $2, $3, $4, $5, $6, $7, $8}'
	#ls -ld | awk '{print "   Links: " $2 " Owner: " $3 " Group: " $4 " Size: " $5 " Modified: " $6, $7, $8}'
	else
		echo
	fi    
	(( count++ ))
done
 
lines=`tput lines`
tput cup $(( $lines-4 )) 0
echo "Valid keys: k (up), j (down): move between filenames"
echo "            h (left), l (right): move between permissions"
echo "            r, w, x, -: change permissions;   q: quit"
tput cup $(( $currentLevel*2+1 )) $currentCol
}           # end of displayPath()             

countCol=1		# compare to the currentCol to deplay the extra infor or nor

#oldsettings=$(stty -g)
stty -icanon min 1 time 0 -icrnl -echo
key=

while [[ "$key" != "q" ]]
do
	displayPath
	key=$(dd bs=3 count=1 2> /dev/null)	
	
	if [[ "$key" = "k" && $currentLevel -gt 1 ]]
	then
		(( currentLevel-- ))
	elif [[ "$key" = "j" && $currentLevel < $totalLevel ]]
	then
		(( currentLevel++ ))
	elif [[ "$key" = "h" && $currentCol -gt 1 ]]
	then
		if [[ $currentCol = 24 || $currentCol = 16 || $currentCol = 8 ]]
		then
			currentCol=$(($currentCol-4))
		else
			currentCol=$(($currentCol-2))
		fi	
	
	elif [[ "$key" = "l" && $currentCol -lt 24 ]]
	then 
		if [[ $currentCol = 4 || $currentCol = 12 || $currentCol = 20 ]]
		then
			currentCol=$(($currentCol+4))
		else
			currentCol=$(($currentCol+2))
		fi
	elif [[ "$key" = "r" ]]
	then
		case $currentCol in 
			0)	chmod u+r $filePath 2> /dev/null;;
			8)	chmod g+r $filePath 2> /dev/null;;
			16)	chmod o+r $filePath 2> /dev/null;;
		esac
	elif [[ "$key" = "w" ]]
	then
		case $currentCol in 
			2)	chmod u+w $filePath 2> /dev/null;;
			10)	chmod g+w $filePath 2> /dev/null;;
			18)	chmod o+w $filePath 2> /dev/null;;
		esac
	elif [[ "$key" = "x" ]]
	then
		case $currentCol in 
			4)	chmod u+x $filePath 2> /dev/null;;
			12)	chmod g+x $filePath 2> /dev/null;;
			20)	chmod o+x $filePath 2> /dev/null;;
		esac
	elif [[ "$key" = "-"  ]]
	then
		case $currentCol in 
		0)	chmod u-r $filePath 2> /dev/null;;
		8)	chmod g-r $filePath 2> /dev/null;;
		16)	chmod o-r $filePath 2> /dev/null;;
		2)	chmod u-w $filePath 2> /dev/null;;
		10)	chmod g-w $filePath 2> /dev/null;;
		18)	chmod o-w $filePath 2> /dev/null;;
		4)	chmod u-x $filePath 2> /dev/null;;
		12)	chmod g-x $filePath 2> /dev/null;;
		20)	chmod o-x $filePath 2> /dev/null;;
		esac	
	fi


tput cup $(( $lines-6 )) 0

done	# end of while-loop

tput cup $lines 0
#trap - SIGINT
stty $oldsettings

